apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: karpenter
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "6"
spec:
  project: default
  source:
    repoURL: oci://public.ecr.aws/karpenter/karpenter
    targetRevision: 1.7.0
    path: .
    helm:
      valuesObject:
        controller:
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
        settings:
          # Enable faster sync for quicker node health detection
          syncPeriod: 0h1m0s
          clusterName: ${CLUSTER_NAME}
          clusterEndpoint: ${CLUSTER_ENDPOINT}
          # Enable drift detection for automatic node repair
          featureGates:
            drift: true
          # Optimize batching for responsive node health checks
          batchMaxDuration: 10s
          batchIdleDuration: 1s
          aws:
            defaultInstanceProfile: ${KARPENTER_INSTANCE_PROFILE}
            region: ${AWS_REGION}
            vpcId: ${AWS_VPC_ID}
            subnetSelector:
              karpenter.sh/discovery/${CLUSTER_NAME}: "${CLUSTER_NAME}"
            securityGroupSelector:
              karpenter.sh/discovery/${CLUSTER_NAME}: "${CLUSTER_NAME}"
        # Replica count for high availability
        replicas: 2
        
        # Service account configuration with IRSA
        serviceAccount:
          create: true
          name: karpenter
          annotations:
            eks.amazonaws.com/role-arn: ${KARPENTER_ROLE_ARN}
        
        # Webhook configuration
        webhook:
          enabled: true
          port: 8443
        
        # Logging configuration - Enable debug logging for detailed troubleshooting
        logLevel: debug
        
        # Node affinity and tolerations - Run only on system nodes
        nodeSelector: {node-type: system}
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - karpenter
                topologyKey: kubernetes.io/hostname
        
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        
        # Security configuration
        securityContext:
          fsGroup: 65532
        
        # Additional settings for production
        dnsPolicy: Default
        dnsConfig:
          options:
          - name: ndots
            value: "1"
        
        # Metrics and monitoring
        serviceMonitor:
          enabled: false
          additionalLabels:
            release: prometheus-stack
  destination:
    server: https://kubernetes.default.svc
    namespace: karpenter
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m