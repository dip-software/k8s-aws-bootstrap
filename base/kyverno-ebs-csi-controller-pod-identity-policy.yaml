apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: validate-ebs-csi-controller-pod-identity
  annotations:
    policies.kyverno.io/title: Validate EBS CSI Controller Pod Identity
    policies.kyverno.io/category: Security, AWS
    policies.kyverno.io/severity: high
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/description: >-
      This policy ensures that EBS CSI Controller pods have the AWS_ROLE_ARN 
      environment variable injected by the EKS Pod Identity webhook. If the environment 
      variable is missing, the pod is rejected, allowing the webhook to retry the mutation.
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "3"
spec:
  validationFailureAction: Enforce
  background: true
  rules:
  - name: validate-ebs-csi-controller-aws-role-arn-env-var
    match:
      any:
      - resources:
          kinds:
          - Pod
          names:
          - "ebs-csi-controller-*"
          namespaces:
          - kube-system
          operations:
          - CREATE
          - UPDATE
    validate:
      message: >-
        EBS CSI Controller pod must have AWS_ROLE_ARN injected into container 'ebs-plugin' by the EKS Pod Identity webhook. Verify the webhook deployment and restart the controller pod if credentials are absent.
      deny:
        conditions:
          all:
          - key: "{{ request.object.spec.containers[?name=='ebs-plugin'] | [0].env || `[]` | [?name=='AWS_ROLE_ARN'] | length(@) }}"
            operator: Equals
            value: 0
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: validate-ebs-csi-controller-serviceaccount-pod-identity
  annotations:
    policies.kyverno.io/title: Validate EBS CSI Controller ServiceAccount Pod Identity
    policies.kyverno.io/category: Security, AWS
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/description: >-
      This policy ensures that EBS CSI Controller pods are using the correct 
      service account that has the EKS role annotation for pod identity.
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "3"
spec:
  validationFailureAction: Enforce
  background: true
  rules:
  - name: validate-ebs-csi-controller-serviceaccount-name
    match:
      any:
      - resources:
          kinds:
          - Pod
          names:
          - "ebs-csi-controller-*"
          namespaces:
          - kube-system
          operations:
          - CREATE
          - UPDATE
    validate:
      message: >
        EBS CSI Controller pod must run with ServiceAccount 'aws-ebs-csi-driver' in namespace 'kube-system' so Pod Identity can assume the correct AWS IAM role.
      deny:
        conditions:
          all:
          - key: "{{ request.object.spec.serviceAccountName }}"
            operator: NotEquals
            value: "aws-ebs-csi-driver"
