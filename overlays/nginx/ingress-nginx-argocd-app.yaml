apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ingress-nginx
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "10"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  ignoreDifferences:
    - group: "apps"
      kind: "Deployment"
      jsonPointers:
      - /spec/replicas
  source:
    repoURL: https://kubernetes.github.io/ingress-nginx
    chart: ingress-nginx
    targetRevision: "*"
    helm:
      valuesObject:
        controller:
          replicaCount: 4  # Increased for hybrid deployment
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 36Mi
          # Hybrid scheduling: prefer static nodes, allow karpenter for scale-out
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              # Strongly prefer static worker nodes first
              - weight: 100
                preference:
                  matchExpressions:
                  - key: node-type
                    operator: In
                    values:
                    - static-worker
              # Allow karpenter nodes for scale-out
              - weight: 10
                preference:
                  matchExpressions:
                  - key: node-type
                    operator: In
                    values:
                    - karpenter-managed
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                      - ingress-nginx
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                      - controller
                  topologyKey: kubernetes.io/hostname  # Spread across individual nodes
              - weight: 50
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                      - ingress-nginx
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                      - controller
                  topologyKey: topology.kubernetes.io/zone
          # Topology spread for hybrid placement
          topologySpreadConstraints:
          # Prefer even distribution across node types
          - maxSkew: 2
            topologyKey: node-type
            whenUnsatisfiable: ScheduleAnyway  # Soft constraint
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: ingress-nginx
                app.kubernetes.io/component: controller
          # Ensure spread across zones
          - maxSkew: 1
            topologyKey: topology.kubernetes.io/zone
            whenUnsatisfiable: DoNotSchedule  # Hard constraint
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: ingress-nginx
                app.kubernetes.io/component: controller
          nodeSelector:
            kubernetes.io/os: linux
          tolerations:
          # Allow scheduling on static worker nodes (they are tainted)
          - key: node-role.kubernetes.io/static-worker
            operator: Equal
            value: "true"
            effect: NoSchedule
          service:
            type: LoadBalancer
            annotations:
              service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
              service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
              service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
              service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
              service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "10"
          podDisruptionBudget:
            enabled: true
            minAvailable: 2  # Ensure at least 2 replicas always available
  destination:
    server: https://kubernetes.default.svc
    namespace: ingress-nginx
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
      - RespectIgnoreDifferences=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 3